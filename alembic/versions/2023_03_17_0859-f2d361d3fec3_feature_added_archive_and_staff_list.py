"""feature: added archive and staff_list

Revision ID: f2d361d3fec3
Revises: 68735684d0fe
Create Date: 2023-03-17 08:59:03.464210

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f2d361d3fec3'
down_revision = '68735684d0fe'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('archive_document_function_types',
    sa.Column('can_cancel', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archive_service_function_types',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archive_staff_functions',
    sa.Column('hours_per_week', sa.Integer(), nullable=True),
    sa.Column('discriminator', sa.String(length=255), nullable=True),
    sa.Column('origin_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('jurisdiction_id', sa.UUID(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['origin_id'], ['staff_functions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['archive_document_function_types.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['archive_service_function_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_lists',
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archive_staff_divisions',
    sa.Column('parent_group_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('staff_list_id', sa.UUID(), nullable=False),
    sa.Column('origin_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['origin_id'], ['staff_divisions.id'], ),
    sa.ForeignKeyConstraint(['parent_group_id'], ['archive_staff_divisions.id'], ),
    sa.ForeignKeyConstraint(['staff_list_id'], ['staff_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archive_staff_units',
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.Column('staff_division_id', sa.UUID(), nullable=False),
    sa.Column('origin_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['origin_id'], ['staff_units.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['staff_division_id'], ['archive_staff_divisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archive_staff_unit_functions',
    sa.Column('staff_unit_id', sa.UUID(), nullable=False),
    sa.Column('staff_function_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['staff_function_id'], ['archive_staff_functions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_unit_id'], ['archive_staff_units.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('staff_unit_id', 'staff_function_id')
    )
    op.alter_column('academic_degree_degrees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('academic_title_degrees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('course_providers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('courses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('institution_degree_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('institutions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('languages', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sciences', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('service_housings', 'address',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('service_housings', 'issue_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('specialties', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('specialties', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('service_housings', 'issue_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('service_housings', 'address',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('sciences', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('languages', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('institutions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('institution_degree_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('courses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('course_providers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('academic_title_degrees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('academic_degree_degrees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_table('archive_staff_unit_functions')
    op.drop_table('archive_staff_units')
    op.drop_table('archive_staff_divisions')
    op.drop_table('staff_lists')
    op.drop_table('archive_staff_functions')
    op.drop_table('archive_service_function_types')
    op.drop_table('archive_document_function_types')
    # ### end Alembic commands ###
