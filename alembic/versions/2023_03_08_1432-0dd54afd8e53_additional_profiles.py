"""additional profiles

Revision ID: 0dd54afd8e53
Revises: 9fae9da641dd
Create Date: 2023-03-08 14:32:44.569505

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0dd54afd8e53'
down_revision = 'f04c5daf7685'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('additional_profiles',
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('abroad_travels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('vehicle_type', sa.String(length=255), nullable=False),
    sa.Column('destination_country', sa.Enum('test', name='destinationcountry'), nullable=False),
    sa.Column('date_from', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('date_to', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=False),
    sa.Column('document_link', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('polygraph_checks',
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('issued_by', sa.String(length=255), nullable=False),
    sa.Column('date_of_issue', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('document_link', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('psychological_checks',
    sa.Column('issued_by', sa.String(length=255), nullable=False),
    sa.Column('date_of_issue', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('document_link', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('special_checks',
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('issued_by', sa.String(length=255), nullable=False),
    sa.Column('date_of_issue', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('document_link', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('violations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('issued_by', sa.Enum('user', 'admin', name='issued_by'), nullable=False),
    sa.Column('article_number', sa.String(length=255), nullable=False),
    sa.Column('consequence', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('property_types',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('properties',
    sa.Column('purchase_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('type_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['property_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_housings',
    sa.Column('issue_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('type_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['additional_profiles.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['property_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('violations')
    op.drop_table('special_checks')
    op.drop_table('psychological_checks')
    op.drop_table('polygraph_checks')
    op.drop_table('abroad_travels')
    op.drop_table('additional_profiles')
    # ### end Alembic commands ###
