"""feature: added positions for users

Revision ID: 9775d021229c
Revises: 640d11ada869
Create Date: 2023-02-07 15:48:29.444061

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9775d021229c'
down_revision = '640d11ada869'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('max_rank_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['max_rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('position_permission_table',
    sa.Column('position_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('permission_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], )
    )
    op.create_table('user_stats',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('physical_training', sa.Integer(), nullable=True),
    sa.Column('fire_training', sa.Integer(), nullable=True),
    sa.Column('attendance', sa.Integer(), nullable=True),
    sa.Column('activity', sa.Integer(), nullable=True),
    sa.Column('opinion_of_colleagues', sa.Integer(), nullable=True),
    sa.Column('opinion_of_management', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('position_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('users', sa.Column('actual_position_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('users', sa.Column('birthday', sa.String(), nullable=True))
    op.create_foreign_key(None, 'users', 'positions', ['actual_position_id'], ['id'])
    op.create_foreign_key(None, 'users', 'positions', ['position_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'birthday')
    op.drop_column('users', 'actual_position_id')
    op.drop_column('users', 'position_id')
    op.drop_table('user_stats')
    op.drop_table('position_permission_table')
    op.drop_table('positions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
