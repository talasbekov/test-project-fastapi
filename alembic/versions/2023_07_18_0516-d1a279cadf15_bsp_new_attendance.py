"""bsp_new_attendance

Revision ID: d1a279cadf15
Revises: 0b35df671645
Create Date: 2023-07-18 05:16:38.787465

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd1a279cadf15'
down_revision = '0b35df671645'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('absent_users')

    class_status = postgresql.ENUM('STARTED', 'COMPLETED', 'WAITING', name='classstatus')
    class_status.create(op.get_bind())

    op.add_column('attendances', sa.Column('class_status', sa.Enum('STARTED', 'COMPLETED', 'WAITING', name='classstatus'), nullable=True))

    attendance_status = postgresql.ENUM('ATTENDED', 'LATE', 'ABSENT_REASON', 'ABSENT', name='attendancestatus')
    attendance_status.create(op.get_bind())

    op.add_column('attended_users', sa.Column('attendance_status', sa.Enum('ATTENDED', 'LATE', 'ABSENT_REASON', 'ABSENT', name='attendancestatus'), nullable=True))

    op.add_column('attended_users', sa.Column('reason', sa.String(), nullable=True))
    op.drop_column('attended_users', 'is_attended')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('attended_users', sa.Column('is_attended', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('attended_users', 'reason')
    op.drop_column('attended_users', 'attendance_status')

    attendance_status = postgresql.ENUM('ATTENDED', 'LATE', 'ABSENT_REASON', 'ABSENT', name='attendancestatus')
    attendance_status.drop(op.get_bind())

    op.drop_column('attendances', 'class_status')

    class_status = postgresql.ENUM('STARTED', 'COMPLETED', 'WAITING', name='classstatus')
    class_status.drop(op.get_bind())

    op.create_table('absent_users',
    sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('absent_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='absent_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='absent_users_pkey')
    )
    # ### end Alembic commands ###
