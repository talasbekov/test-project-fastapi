"""feat: medical tables

Revision ID: 0b6eb3f5b2b1
Revises: 35386f0dff3f
Create Date: 2023-03-08 21:31:33.334991

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0b6eb3f5b2b1'
down_revision = '35386f0dff3f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medical_profiles',
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('anthropometric_data',
    sa.Column('head_circumference', sa.Integer(), nullable=True),
    sa.Column('shoe_size', sa.Integer(), nullable=True),
    sa.Column('neck_circumference', sa.Integer(), nullable=True),
    sa.Column('shape_size', sa.Integer(), nullable=True),
    sa.Column('bust_size', sa.Integer(), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['medical_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dispensary_registrations',
    sa.Column('initiator', sa.String(), nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('document_link', sa.TEXT(), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['medical_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_user_informations',
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('blood_group', sa.Enum('O_PLUS', 'O_MINUS', 'A_PLUS', 'A_MINUS', 'B_PLUS', 'B_MINUS', 'AB_PLUS', 'AB_MINUS', name='bloodtype'), nullable=True),
    sa.Column('age_group', sa.Enum('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'FIFTH', 'SIXTH', name='agegroup'), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['medical_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital_datas',
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('place', sa.String(), nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('document_link', sa.TEXT(), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['medical_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_liberations',
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('liberation_name', sa.String(), nullable=True),
    sa.Column('initiator', sa.String(), nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['medical_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint(None, 'abroad_travels', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'abroad_travels', type_='unique')
    op.drop_table('user_liberations')
    op.drop_table('hospital_datas')
    op.drop_table('general_user_informations')
    op.drop_table('dispensary_registrations')
    op.drop_table('anthropometric_data')
    op.drop_table('medical_profiles')
    # ### end Alembic commands ###
